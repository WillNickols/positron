{
	"openrpc": "1.3.0",
	"info": {
		"title": "Variables Frontend",
		"version": "1.0.0"
	},
	"methods": [
		{
			"name": "update",
			"summary": "Update variables",
			"description": "Updates the variables in the current session.",
			"params": [
				{
					"name": "assigned",
					"description": "An array of variables that have been newly assigned.",
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/variable"
						}
					}
				},
				{
					"name": "unevaluated",
					"description": "An array of variables that were not evaluated for value updates.",
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/variable"
						}
					}
				},
				{
					"name": "removed",
					"description": "An array of variable names that have been removed.",
					"schema": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				{
					"name": "version",
					"description": "The version of the view (incremented with each update), or 0 if the backend doesn't track versions.",
					"schema": {
						"type": "integer"
					}
				}
			]
		},
		{
			"name": "refresh",
			"summary": "Refresh variables",
			"description": "Replace all variables in the current session with the variables from the backend.",
			"params": [
				{
					"name": "variables",
					"description": "An array listing all the variables in the current session.",
					"schema": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/variable"
						}
					}
				},
				{
					"name": "length",
					"description": "The number of variables in the current session.",
					"schema": {
						"type": "integer"
					}
				},
				{
					"name": "version",
					"description": "The version of the view (incremented with each update), or 0 if the backend doesn't track versions.",
					"schema": {
						"type": "integer"
					}
				}
			]
		},
		{
			"name": "return_async_clear",
			"summary": "Return async clear result",
			"description": "Returns the result of an async clear operation.",
			"params": [
				{
					"name": "callback_id",
					"description": "The callback ID that was used to send the async clear request.",
					"required": true,
					"schema": {
						"type": "string"
					}
				},
				{
					"name": "error_message",
					"description": "Optional error message if something failed to compute",
					"required": false,
					"schema": {
						"type": "string"
					}
				}
			]
		}
	]
}
