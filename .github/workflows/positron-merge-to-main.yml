name: "Positron: CI - Merge to main"

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      smoketest_target:
        required: false
        description: "Smoketest suite to run, e.g. smoketest-merge-to-main or smoketest-pr"
        default: "smoketest-merge-to-main"
        type: string
  workflow_dispatch:
    inputs:
      smoketest_target:
        required: false
        description: "Smoketest suite to run, e.g. smoketest-merge-to-main or smoketest-pr"
        default: "smoketest-merge-to-main"
        type: string

env:
  SMOKETEST_TARGET: ${{ inputs.smoketest_target || 'smoketest-merge-to-main' }}

permissions:
  id-token: write
  contents: read

jobs:
  test-linux:
    name: Tests on Linux
    runs-on: ubuntu-latest
    timeout-minutes: 45
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      POSITRON_BUILD_NUMBER: 0 # CI skips building releases

    steps:
      - uses: actions/checkout@v4

      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y vim curl build-essential clang make cmake git python3-pip python-is-python3 libsodium-dev libxkbfile-dev pkg-config libsecret-1-dev libxss1 dbus xvfb libgtk-3-0 libgbm1 libnss3 libnspr4 libasound2 libkrb5-dev libcairo-dev libsdl-pango-dev libjpeg-dev libgif-dev
          sudo cp build/azure-pipelines/linux/xvfb.init /etc/init.d/xvfb
          sudo chmod +x /etc/init.d/xvfb
          sudo update-rc.d xvfb defaults
          sudo service xvfb start

      - name: Restore caches for node_modules, build, extensions, and remote
        uses: ./.github/actions/restore-cache-multi-paths

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: AWS S3 Access Setup
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.QA_AWS_RO_ROLE }}
          aws-region: ${{ secrets.QA_AWS_REGION }}

      - name: Execute yarn
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
          ELECTRON_SKIP_BINARY_DOWNLOAD: 1
          POSITRON_GITHUB_PAT: ${{ github.token }}
        run: |
          # Install Yarn
          npm install -g yarn

          # Install node-gyp; this is required by some packages, and yarn
          # sometimes fails to automatically install it.
          yarn global add node-gyp

          # Perform the main yarn command; this installs all Node packages and
          # dependencies
          yarn --immutable --network-timeout 120000
          yarn --cwd test/automation install --frozen-lockfile
          yarn --cwd test/smoke install --frozen-lockfile

      - name: Compile and Download
        run: yarn npm-run-all --max_old_space_size=4095 -lp compile "electron x64" playwright-install download-builtin-extensions

      - name: Compile Integration Tests
        run: yarn --cwd test/integration/browser compile

      - name: Compile Smoke Tests
        run: yarn --cwd test/smoke compile

      - name: Save caches for node_modules, build, extensions, and remote
        uses: ./.github/actions/save-cache-multi-paths

      - name: Run Unit Tests (node.js)
        id: nodejs-unit-tests
        run: |
          docker run --rm \
            -v $(pwd):/usr/src/positron \
            -w /usr/src/positron \
            mdefurio/positron-tests:latest \
            bash -c "yarn test-node"

      - name: Run Integration Tests (Electron)
        id: electron-integration-tests
        run: |
          docker run --rm \
            -e DISPLAY=:10 \
            -v $(pwd):/usr/src/positron \
            -w /usr/src/positron \
            mdefurio/positron-tests:latest \
            bash -c "./scripts/test-integration.sh"
        # bash -c "service xvfb start && ps aux | grep Xvfb && \
        #   DISPLAY=:10 ./scripts/test-integration-pr.sh"

      - name: Run Smoke Tests (Electron)
        id: electron-smoke-tests
        run: |
          docker run --rm \
            -e DISPLAY=:10 \
            -e POSITRON_PY_VER_SEL=3.10.12 \
            -e POSITRON_R_VER_SEL=4.4.0 \
            -e SMOKETEST_TARGET=${{ env.SMOKETEST_TARGET }} \
            -v $(pwd):/usr/src/positron \
            -w /usr/src/positron \
            mdefurio/positron-tests:latest \
            bash -c "yarn $SMOKETEST_TARGET --tracing"
        # bash -c "service xvfb start && ps aux | grep Xvfb && \
        #   DISPLAY=:10 yarn $SMOKETEST_TARGET --tracing"

      # - name: Set TestRail Run Title
      #   id: set-testrail-run-title
      #   if: always()
      #   run: echo "TESTRAIL_TITLE=$(date +'%Y-%m-%d') Smoke Tests on branch $GITHUB_REF_NAME" >> $GITHUB_ENV

      # - name: Upload Test Results to TestRail
      #   id: testrail-upload
      #   if: always()
      #   run: trcli --host "https://posit.testrail.io/" --project Positron --username testrailautomation@posit.co --key ${{ secrets.TESTRAIL_API_KEY }} parse_junit --file ".build/logs/smoke-tests-electron/test-results/results.xml" --case-matcher name --title "$TESTRAIL_TITLE" --close-run

      # - name: Upload run artifacts
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: run-artifacts
      #     path: .build/logs/smoke-tests-electron/

      # - name: slack-smoke-test-report
      #   if: ${{ failure() && env.SMOKETEST_TARGET == 'smoketest-merge-to-main' }}
      #   uses: testlabauto/xunit-slack-reporter@v2.0.1
      #   env:
      #     SLACK_CHANNEL: C07FR1JNZNJ #positron-test-results channel
      #     SLACK_TOKEN: ${{ secrets.SMOKE_TESTS_SLACK_TOKEN }}
      #     XUNIT_PATH: .build/logs/smoke-tests-electron/test-results/results.xml
